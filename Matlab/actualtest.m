src0=[684.1533813476562, 635.3102416992188, 718.9427490234375, 227.6757354736328, 958.6412353515625, 351.9144592285156, 1245.66357421875, 469.6948547363281, 616.288818359375, 605.2478637695312, 937.0824584960938, 110.6790390014648, 348.7598266601562, 197.0038909912109];
dst0=[-0.8625822067260742, 3.860513210296631, 0, 0.9458679556846619, 3.502114772796631, 0, 0.1865028440952301, 2.776275873184204, 0, -0.4775960445404053, 1.963790059089661, 0, -0.7227934598922729, 4.014149188995361, 0, 1.640710115432739, 2.536495208740234, 0, 1.274419784545898, 4.712845802307129, 0];
src1=[582.345458984375, 19.9511604309082, 808.1552124023438, 404.4752807617188, 577.7470703125, 217.7782287597656, 1058.904907226562, 923.2915649414062, 901.5184326171875, 443.0107727050781, 1353.303955078125, 492.4229431152344, 615.3204956054688, 821.5849609375];
dst1 = [-2.386893510818481, 5.305253028869629, 0, -0.5837472081184387, 3.180337190628052, 0, -1.799497008323669, 3.984817504882812, 0, 0.7194727063179016, 1.461861133575439, 0, -0.2301059365272522, 3.07592511177063, 0, 1.20340633392334, 3.252561092376709, 0, -0.5198125243186951, 1.401631236076355, 0];
src0=reshape(src0,2,[])';
dst0=reshape(dst0,3,[])';
src1=reshape(src1,2,[])';
dst1=reshape(dst1,3,[])';

hom0=[-0.000513 -0.005307 2.581812   % Homogrphies from calibrator
     -0.004181 0.003195 5.912557 
     -0.000156 0.000672 1.000000 ];
ihom0=[32.753078 -295.589172 1663.125488 
       -136.653717 4.584259 325.709473
       0.097011 -0.049326 1.000000];
pose0=[0.233078 -0.999880 0.000152 7.626413 
       -0.972458 0.015507 -0.000651 1.493570 
       0.000690 -0.000167 -0.968727 0.004586]
hom1=[0.004480 0.002009 -5.249223 
      0.001683 -0.004406 4.910583
      0.000135 0.000739 1.000000 ];
ihom1=[347.447083 254.594009 573.622253 
       44.002354 -224.554016 1333.669189 
       -0.079573 0.131365 1.000000];
% Verify mappings
for i=1:size(src0,1)
  mapped=ihom0*[dst0(i,1:2),1]';
  mapped=mapped(1:2)/mapped(3);
  fprintf('(%.2f,%.2f) -> (%.0f, %.0f), expected (%.0f, %.0f)\n', dst0(i,1:2),mapped,src0(i,:));
end

ihom0rel=ihom0;
ihom0rel(1,3)=ihom0rel(1,3)-960;
ihom0rel(1,:)=ihom0rel(1,:)/960;
ihom0rel(2,3)=ihom0rel(2,3)-540;
ihom0rel(2,:)=ihom0rel(2,:)/540;


proj=[ 0.2851  0.0000  0.0000  0.0000
 0.0000 -0.5068  1.2027  0.0000
 0.0000  0.0000 -1.0408 -2.0408
 0.0000  0.0000 -1.0000  0.0000];  % Projector matrix from Java code   
% Reformulate into 3x3 intrinics matrix as used by OpenCV
intrinsics=proj([1,2,4],1:3);
intrinsics(3,3)=-intrinsics(3,3);   % Inverted z-axis
intrinsics=intrinsics/intrinsics(3,3);
% Convert to pixels
intrinsics(1,:)=intrinsics(1,:)*1920;
intrinsics(2,:)=intrinsics(2,:)*1080;
intrinsics

hom=hom0
perimeter=[(0:1920),(0:1080)*0+1920,(1920:-1:0),(1080:-1:0)*0]';
perimeter(:,2)=[(0:1920)*0,(0:1080),(1920:-1:0)*0+1080,(1080:-1:0)];
perimeter(:,3)=1;
setfig('actual');clf;
pworld=(hom*perimeter')';
for i=1:size(pworld,1)
  pworld(i,:)=pworld(i,:)/pworld(i,3);
end
pworld=pworld(:,1:2);

plot(pworld(:,1),pworld(:,2));
hold on;
plot(ctr(1),ctr(2),'x');
tag={'TL','BL','BR','TR'};
for i=1:4
  text(wc(1,i),wc(2,i),tag{i});
end
axis equal;

for x=0:1920:1920
  for y=0:1080:1080
    w=hom*[x y 1]';
    w=w(1:2)/w(3);
    fprintf('%4d,%4d -> %5.2f, %5.2f\n',x,y,w);
  end
end

corners=[0 0
         0 1080
         1920 1080
         1920 0
         0 0
         1920/2 1080/2];

corners(:,3)=1;
wc=hom*corners';
for i=1:size(wc,2)
  wc(:,i)=wc(:,i)/wc(3,i);
end
wc=wc(1:2,:);
tl=wc(:,1);
bl=wc(:,2);
br=wc(:,3);
tr=wc(:,4);
ctr=wc(:,6);

